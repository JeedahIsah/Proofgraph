version: '3.8'

services:
  # Neo4j Graph Database
  neo4j:
    image: neo4j:5.15-community
    container_name: proofgraph-neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/proofgraph123
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=2G
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - proofgraph-network
    restart: unless-stopped

  # Redis for Caching
  redis:
    image: redis:7.2-alpine
    container_name: proofgraph-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass proofgraph123
    volumes:
      - redis_data:/data
    networks:
      - proofgraph-network
    restart: unless-stopped

  # PostgreSQL for Metadata
  postgres:
    image: postgres:16-alpine
    container_name: proofgraph-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=proofgraph
      - POSTGRES_USER=proofgraph
      - POSTGRES_PASSWORD=proofgraph123
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - proofgraph-network
    restart: unless-stopped

  # IPFS Node for Decentralized Storage
  ipfs:
    image: ipfs/kubo:v0.24.0
    container_name: proofgraph-ipfs
    ports:
      - "4001:4001"    # P2P
      - "5001:5001"    # API
      - "8080:8080"    # Gateway
    environment:
      - IPFS_PROFILE=server
    volumes:
      - ipfs_data:/data/ipfs
      - ipfs_staging:/export
    networks:
      - proofgraph-network
    restart: unless-stopped

  # Prometheus for Monitoring
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: proofgraph-prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./infrastructure/docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - proofgraph-network
    restart: unless-stopped

  # Grafana for Visualization
  grafana:
    image: grafana/grafana:10.2.0
    container_name: proofgraph-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=proofgraph123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infrastructure/docker/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - proofgraph-network
    restart: unless-stopped
    depends_on:
      - prometheus

  # Elasticsearch for Logging
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: proofgraph-elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - proofgraph-network
    restart: unless-stopped

  # Kibana for Log Visualization
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: proofgraph-kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - proofgraph-network
    restart: unless-stopped
    depends_on:
      - elasticsearch

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  redis_data:
  postgres_data:
  ipfs_data:
  ipfs_staging:
  prometheus_data:
  grafana_data:
  elasticsearch_data:

networks:
  proofgraph-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16